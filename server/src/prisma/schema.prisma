// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 词条编辑记录
model Record {
  record_id     Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  Entry         Entry?   @relation(fields: [entryEntry_id], references: [entry_id])
  entryEntry_id Int?
  prevLangs     Json?
  currLangs     Json?
  prevKey       String?
  currKey       String?
  creator       Int?
}

// 词条
model Entry {
  entry_id      Int          @id @default(autoincrement())
  key           String?
  createBy      Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  public        Boolean      @default(false)
  archive       Boolean      @default(false)
  deleted       Boolean      @default(false)
  modifyRecords Record[]
  mainLang      LanguageType @default(CHINESE)
  mainLangText  String?
  langs         Json?
  app           App?         @relation(fields: [appApp_id], references: [app_id])
  appApp_id     Int?
  uploaded      Boolean      @default(false)
}

// 应用
model App {
  app_id              Int                   @id @default(autoincrement())
  name                String
  description         String?
  type                AppType
  languages           LanguageType[]
  pictures            String[]
  createdAt           DateTime              @default(now())
  entries             Entry[]
  accessKey           String?
  deleted             Boolean               @default(false)
  archived            Boolean               @default(false)
  push                Boolean               @default(true)
  access              Boolean               @default(true)
  creator             User?                 @relation(fields: [creatorId], references: [user_id])
  creatorId           Int?
  CollaboratorsOnApps CollaboratorsOnApps[]
}

// 应用协作者关联表
model CollaboratorsOnApps {
  collaborator   User     @relation(fields: [collaboratorId], references: [user_id])
  app            App      @relation(fields: [appId], references: [app_id])
  collaboratorId Int
  appId          Int
  assignedAt     DateTime @default(now())
  assignedBy     String?

  @@id([collaboratorId, appId])
}

model User {
  user_id             Int                   @id @default(autoincrement())
  account             String?
  email               String                @unique
  phone               String?               @unique
  nickName            String?
  name                String?
  role                UserRole?
  avatar              String?
  password            String
  createdAt           DateTime              @default(now())
  apps                App[]
  Feedback            Feedback[]
  CollaboratorsOnApps CollaboratorsOnApps[]
}

model Langs {
  lang_id  Int          @id @default(autoincrement())
  label    String       @unique
  value    LanguageType
  disabled Boolean      @default(false)
}

model Feedback {
  feedback_id Int     @id @default(autoincrement())
  user        User?   @relation(fields: [userUser_id], references: [user_id])
  userUser_id Int?
  message     String?
  result      Boolean
}

enum AppType {
  TOOL
  EFFICIENCY
  MUSIC
  FINANCE
  GAME
  CONTACT
  OTHER
  EDUCATION
}

enum LanguageType {
  CHINESE
  ENGLISH
  THAI
  VIETNAMESE
}

enum UserRole {
  DEVELOPER
  TRANSLATOR
  MANAGER
  OTHER
}
