# 获取当前用户创建的应用列表
query getCurrentApps(
  $name: String
  $type: AppTypeEnum
  $languages: [String!]
  $access: Boolean
  $push: Boolean
) {
  getCurrentApps(
    name: $name
    type: $type
    languages: $languages
    access: $access
    push: $push
  ) {
    total
    pageSize
    current
    records {
      app_id
      name
      description
      type
      languages
      pictures
      access
      push
      accessKey
      creatorId
      creator {
        name
        user_id
        email
        nickName
        phone
        role
        avatar
        verifyType
      }
      entryCount
      role
    }
  }
}

# 创建应用
mutation createApp(
  $name: String!
  $description: String
  $type: AppTypeEnum!
  $languages: [String!]!
  $pictures: [String!]!
) {
  createApp(
    name: $name
    description: $description
    type: $type
    languages: $languages
    pictures: $pictures
  )
}

# 通过应用id获取应用基本信息
query getAppInfoById($id: Int!) {
  getAppInfoById(id: $id) {
    app_id
    name
    description
    type
    languages
    pictures
    access
    push
    accessKey
    creatorId
    creator {
      name
      user_id
      email
      nickName
      phone
      role
      avatar
      verifyType
    }
    entryCount
  }
}

# 更新应用基本信息
mutation updateAppBasicInfo(
  $appId: Int!
  $description: String
  $type: AppTypeEnum!
  $pictures: [String!]!
) {
  updateAppBasicInfo(
    appId: $appId
    description: $description
    type: $type
    pictures: $pictures
  )
}

# 刷新应用accessKey
mutation refreshAccessKey($id: Int!) {
  refreshAccessKey(id: $id)
}

# 更改应用在可访问和推送上的状态
mutation changeAccessStatus($appId: Int!, $access: Boolean, $push: Boolean) {
  changeAccessStatus(appId: $appId, access: $access, push: $push)
}

# 归档一个应用（归档后不能再编辑）
mutation archivedApp($id: Int!) {
  archivedApp(id: $id)
}

# 删除一个应用（逻辑删除），删除后应用对客户不可见
mutation deleteApp($id: Int!) {
  deleteApp(id: $id)
}

# 获取应用的协作者列表
query getAppCollaborators($appId: Int!) {
  getAppCollaborators(appId: $appId) {
    assignedAt
    id
    role
    user {
      name
      user_id
      email
      nickName
      phone
      role
      avatar
      verifyType
    }
    app {
      app_id
      name
      description
      type
      languages
      pictures
      access
      push
      accessKey
      creatorId
      creator {
        name
        user_id
        email
        nickName
        phone
        role
        avatar
        verifyType
      }
      entryCount
    }
  }
}

# 邀请协作者
mutation inviteCollaborators(
  $appId: Int!
  $userIdList: [CollaboratorsInput!]!
) {
  inviteCollaborators(appId: $appId, userIdList: $userIdList)
}

# 移除协作者
mutation removeCollaborators($appId: Int!, $userIdList: [Int!]!) {
  removeCollaborators(appId: $appId, userIdList: $userIdList)
}

# 获取应用协作者的统计信息
query getAppCollaboratorsStatistics($appId: Int!) {
  getAppCollaboratorsStatistics(appId: $appId) {
    userId
    addCount
    addCountToday
    modifyCount
  }
}

# 根据应用id获取应用权限&访问相关的信息
query getAccessKeyByAppId($id: Int!) {
  getAccessKeyByAppId(id: $id) {
    app_id
    name
    deleted
    archived
    push
    access
    accessKey
  }
}

# 生成多语言模版文件并返回
mutation downloadAppXlsTemplate($appId: Int!) {
  downloadAppXlsTemplate(appId: $appId)
}
