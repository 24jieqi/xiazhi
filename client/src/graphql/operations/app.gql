query GetCurrentApps(
  $name: String
  $type: AppTypeEnum
  $languages: [LanguageTypeEnum!]
  $access: Boolean
  $push: Boolean
) {
  getCurrentApps(
    name: $name
    type: $type
    languages: $languages
    access: $access
    push: $push
  ) {
    total
    pageSize
    current
    records {
      app_id
      name
      description
      type
      languages
      pictures
      access
      push
      accessKey
      creatorId
      creator {
        name
        user_id
        email
        nickName
        phone
        role
        avatar
      }
      entryCount
    }
  }
}

mutation CreateApp(
  $name: String!
  $type: AppTypeEnum!
  $languages: [LanguageTypeEnum!]!
  $pictures: [String!]!
  $description: String
) {
  createApp(
    name: $name
    type: $type
    languages: $languages
    pictures: $pictures
    description: $description
  )
}

query GetAppInfoById($getAppInfoByIdId: Int!) {
  getAppInfoById(id: $getAppInfoByIdId) {
    app_id
    name
    description
    type
    languages
    pictures
    access
    push
    creatorId
    creator {
      name
      user_id
      email
      nickName
      phone
      role
      avatar
    }
    entryCount
  }
}

mutation UpdateAppBasicInfo(
  $appId: Int!
  $type: AppTypeEnum!
  $pictures: [String!]!
  $description: String
) {
  updateAppBasicInfo(
    appId: $appId
    type: $type
    pictures: $pictures
    description: $description
  )
}

query GetAccessKeyByAppId($getAccessKeyByAppIdId: Int!) {
  getAccessKeyByAppId(id: $getAccessKeyByAppIdId) {
    app_id
    name
    deleted
    archived
    push
    access
    accessKey
  }
}

mutation RefreshAccessKey($refreshAccessKeyId: Int!) {
  refreshAccessKey(id: $refreshAccessKeyId)
}

mutation ChangeAccessStatus($appId: Int!, $access: Boolean, $push: Boolean) {
  changeAccessStatus(appId: $appId, access: $access, push: $push)
}

mutation ArchivedApp($archivedAppId: Int!) {
  archivedApp(id: $archivedAppId)
}

mutation DeleteApp($deleteAppId: Int!) {
  deleteApp(id: $deleteAppId)
}

query GetAppCollaborators($appId: Int!) {
  getAppCollaborators(appId: $appId) {
    assignedAt
    collaborator {
      name
      user_id
      email
      nickName
      phone
      role
      avatar
    }
    app {
      app_id
      name
      description
      type
      languages
      pictures
      access
      push
      accessKey
      creatorId
      creator {
        name
        user_id
        email
        nickName
        phone
        role
        avatar
      }
      entryCount
    }
  }
}

mutation InviteCollaborators($appId: Int!, $userIdList: [Int!]!) {
  inviteCollaborators(appId: $appId, userIdList: $userIdList)
}

mutation RemoveCollaborators($appId: Int!, $userIdList: [Int!]!) {
  removeCollaborators(appId: $appId, userIdList: $userIdList)
}
